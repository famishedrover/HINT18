# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-03-17 02:33
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='A_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='B_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='C_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='child_model',
            fields=[
                ('id', models.AutoField(default=0, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('age', models.IntegerField()),
                ('total_evaluations', models.IntegerField(default=0)),
                ('score', models.IntegerField(default=100)),
            ],
        ),
        migrations.CreateModel(
            name='D_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='E_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='F_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='G_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='H_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='I_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='J_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='K_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='L_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='M_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='N_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='O_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='P_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='parent_model',
            fields=[
                ('id', models.AutoField(default=0, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('child_id', models.IntegerField()),
                ('A', models.IntegerField()),
                ('B', models.IntegerField()),
                ('C', models.IntegerField()),
                ('D', models.IntegerField()),
                ('E', models.IntegerField()),
                ('F', models.IntegerField()),
                ('G', models.IntegerField()),
                ('H', models.IntegerField()),
                ('I', models.IntegerField()),
                ('J', models.IntegerField()),
                ('K', models.IntegerField()),
                ('L', models.IntegerField()),
                ('M', models.IntegerField()),
                ('N', models.IntegerField()),
                ('O', models.IntegerField()),
                ('P', models.IntegerField()),
                ('Q', models.IntegerField()),
                ('R', models.IntegerField()),
                ('S', models.IntegerField()),
                ('T', models.IntegerField()),
                ('U', models.IntegerField()),
                ('V', models.IntegerField()),
                ('W', models.IntegerField()),
                ('X', models.IntegerField()),
                ('Y', models.IntegerField()),
                ('Z', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Q_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='R_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='S_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='T_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='U_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='V_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='W_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='X_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Y_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Z_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_id', models.IntegerField()),
                ('evaluation_no', models.IntegerField()),
                ('score', models.IntegerField(default=100)),
                ('total_time', models.FloatField()),
                ('no_of_strokes', models.IntegerField()),
                ('total_length', models.FloatField(default=0)),
                ('time_delay', models.FloatField()),
            ],
        ),
    ]
